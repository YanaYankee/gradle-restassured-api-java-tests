/*
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.6
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.swagger.petstore.apis;

import com.swagger.petstore.models.Order;
import com.swagger.petstore.ApiClient;
import com.swagger.petstore.apis.StoreApi;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.filter.log.ErrorLoggingFilter;
import org.junit.Before;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import static io.restassured.config.ObjectMapperConfig.objectMapperConfig;
import static io.restassured.config.RestAssuredConfig.config;
import static com.swagger.petstore.GsonObjectMapper.gson;

/**
 * API tests for StoreApi
 */
@Ignore
public class StoreApiTest {

    private StoreApi api;

    @Before
    public void createApi() {
        api = ApiClient.api(ApiClient.Config.apiConfig().reqSpecSupplier(
                () -> new RequestSpecBuilder()
                        .setConfig(config().objectMapperConfig(objectMapperConfig().defaultObjectMapper(gson())))
                        .addFilter(new ErrorLoggingFilter())
                        .setBaseUri("https://petstore.swagger.io/v2"))).store();
    }

    /**
     * Invalid ID supplied
     */
    @Test
    public void shouldSee400AfterDeleteOrder() {
        Long orderId = null;
        api.deleteOrder()
                .orderIdPath(orderId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Order not found
     */
    @Test
    public void shouldSee404AfterDeleteOrder() {
        Long orderId = null;
        api.deleteOrder()
                .orderIdPath(orderId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * successful operation
     */
    @Test
    public void shouldSee200AfterGetInventory() {
        api.getInventory().execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * successful operation
     */
    @Test
    public void shouldSee200AfterGetOrderById() {
        Long orderId = null;
        api.getOrderById()
                .orderIdPath(orderId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Invalid ID supplied
     */
    @Test
    public void shouldSee400AfterGetOrderById() {
        Long orderId = null;
        api.getOrderById()
                .orderIdPath(orderId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Order not found
     */
    @Test
    public void shouldSee404AfterGetOrderById() {
        Long orderId = null;
        api.getOrderById()
                .orderIdPath(orderId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * successful operation
     */
    @Test
    public void shouldSee200AfterPlaceOrder() {
        Order body = null;
        api.placeOrder()
                .body(body).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Invalid Order
     */
    @Test
    public void shouldSee400AfterPlaceOrder() {
        Order body = null;
        api.placeOrder()
                .body(body).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

}
